<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
            http://www.springframework.org/schema/beans/spring-beans.xsd  
            http://www.springframework.org/schema/mvc  
            http://www.springframework.org/schema/mvc/spring-mvc.xsd  
            http://www.springframework.org/schema/context  
            http://www.springframework.org/schema/context/spring-context.xsd"
	default-lazy-init="true">

	<!-- 通过mvc:resources设置静态资源，这样servlet就会处理这些静态资源，而不通过控制器 -->
	<!-- 设置不过滤内容，比如:css,jquery,img 等资源文件 -->

	<mvc:resources mapping="/javascript/**" location="/js/" />
	<mvc:resources mapping="/styles/**" location="/css/" />
	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:default-servlet-handler />

	<!-- 添加注解驱动 -->
	<mvc:annotation-driven />
	<!-- 启动自动扫描,其它注解扫描在applicationContext.xml中 -->
     <context:component-scan base-package="com.tingyu">
     <!-- 制定扫包规则 ,只扫描使用@Controller注解的JAVA类 -->
         <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
     </context:component-scan>

	<!-- mvc:view-controller可以在不需要Controller处理request的情况，转向到设置的View -->
	<!-- 像下面这样设置，如果请求为/，则不通过controller，而直接解析为/index.jsp -->
	<mvc:view-controller path="/" view-name="index" />
	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView"></property>
		<!-- 配置jsp路径前缀 -->
		<property name="prefix" value="/WEB-INF/"></property>
		<!-- 配置URl后缀 -->
		<property name="suffix" value=".jsp"></property>
	</bean>

	<!-- 拦截器配置 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!--需拦截的地址-->
			<!--二级目录-->
			<mvc:mapping path="/admin/**"/>
			<!--需排除拦截的地址-->
			<mvc:exclude-mapping path="/admin"/>
			<mvc:exclude-mapping path="/admin/login"/>

			<bean class="com.tingyu.interceptor.LoginInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- 实现文件上传，这样一旦某个Request是一个MultipartRequest，它就会首先被MultipartResolver处理，然后再转发相应的Controller -->
<!-- 	<bean id="multipartResolver"
		class="com.tingyu.listener.CustomMultipartResolver">
		
		<property name="defaultEncoding" value="utf-8"></property>  
		
		设置上传文件的最大尺寸为1 * 10000 MB 
        <property name="maxUploadSize" value="10485760000"></property>  
        <property name="maxInMemorySize" value="40960"></property> 
	</bean> -->

</beans>  